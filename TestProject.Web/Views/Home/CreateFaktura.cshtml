@model TestProject.Web.ViewModels.Faktura

@{
    ViewBag.Title = "Unos faktura";
}

@using (Html.BeginForm("CreateFaktura", "Home", FormMethod.Post, new { @id = "beginForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Faktura</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DatumIzdavanja, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatumIzdavanja, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatumIzdavanja, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatumDospijeca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatumDospijeca, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatumDospijeca, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <table id="stavke">
                <tbody>
                    @if (Model.Stavke != null)
                    {
                        foreach (var stavka in Model.Stavke)
                        {
                            <tr>
                                @Html.Partial("StavkaRow", stavka)
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <button type="button" id="addStavka">Dodaj stavku</button>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cijena, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cijena, new { htmlAttributes = new { @class = "form-control", @id = "cijenaF" } })
                @Html.ValidationMessageFor(model => model.Cijena, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.RadioButtonFor(model => model.PDV, "25", new { @class = "radiobutton", @id = "HR|25" })
        @Html.ValidationMessageFor(model => model.PDV, "", new { @class = "text-danger" })
         @Html.Label("RH porez: 25%")

        @Html.RadioButtonFor(model => model.PDV, "17", new { @class = "radiobutton", @id = "BiH|17" })
        @Html.ValidationMessageFor(model => model.PDV, "", new { @class = "text-danger" })
        @Html.Label("BiH porez: 17%")

        <div class="form-group">
            @Html.LabelFor(model => model.CijenaSPDVom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CijenaSPDVom, new { htmlAttributes = new { @class = "form-control", @id = "cijenaPDV" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StvarateljRacuna, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StvarateljRacuna, new { htmlAttributes = new { @class = "form-control", @id = "korisnik" } })
                @Html.ValidationMessageFor(model => model.StvarateljRacuna, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Primatelj, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Primatelj, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Primatelj, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="createButton" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="http://code.jquery.com/jquery-latest.js"></script>
    <script>
        $("#addStavka").on("click", function () {
            $.ajax({
                url: '@Url.Action("AddStavka", "Home")'
            }).success(function (partialView) {
                $('#stavke> tbody:last-child').append(partialView);
            });
        });

        $(".radiobutton").on("click", function () {
            $(this).addClass("rbSelected");
            var countryData = $(this).attr("id").split('|');
            var data = {
                Cijena: parseInt($("#cijenaF").val()),
                Drzava: countryData[0],
                PDV: countryData[1]
            };

            $.ajax({
                url: '@Url.Action("CalculateTaxes", "Home")',
                type: 'POST',
                data: data,
            }).done(function (result) {
                $("#cijenaPDV").attr('value', result);
            });
        });

        var total = [];
        $(document).on("blur", ".cijena", function () {
            $(this).siblings(".ukupnaCijena").val($(this).siblings(".kolicina").val() * $(this).val());

            total.push($(this).siblings(".ukupnaCijena").val());
            $(this).siblings(".ukupnaCijena").removeClass("ukupnaCijena");
            $(this).siblings(".kolicina").removeClass("kolicina");
            var zbroj = 0;
            for (var i in total) {
                zbroj += parseInt(total[i]);
            }
            $("#cijenaF").attr('value', zbroj);

            if (document.querySelector(".rbSelected") != null) {
                var countryData = document.querySelector(".rbSelected").id.split('|');
                var data = {
                    Cijena: parseInt($("#cijenaF").val()),
                    Drzava: countryData[0],
                    PDV: countryData[1]
                };
                $.ajax({
                    url: '@Url.Action("CalculateTaxes", "Home")',
                    type: 'POST',
                    data: data,
                }).done(function (result) {
                    $("#cijenaPDV").attr('value', result.toString());
                });
            }
        });

        $(document).ready(
             $.ajax({
                 url: '@Url.Action("GetUser", "Home")',
                 type: 'GET',
             }).done(function (result) {
                 $("#korisnik").attr('value', result);
             }));
    </script>
}

